<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mz.modules.admin.dao.mapper.TSysDeptMapper">
    <resultMap id="SimpleResult" type="TSysDept">
        <id property="id" column="id"/>
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="pid" column="pid"/>
        <result property="pids" column="pids"/>
        <result property="state" column="state"/>
        <result property="leader" column="leader"/>
        <result property="phone" column="phone"/>
        <result property="mail" column="mail"/>
        <result property="createdTime" column="created_time"/>
        <result property="updatedTime" column="updated_time"/>
    </resultMap>
    <sql id="SelectOneSql" >
        select <trim suffixOverrides=","> id,  name,  pid,  pids,  state,  leader,  phone,  mail,  created_time,  updated_time, </trim>
        from t_sys_dept
    </sql>
    <select id="selectById" resultType="TSysDept" parameterType="TSysDept">
        <include refid="SelectOneSql"/>
        where id=#{id}
        ${params.dataScope}
    </select>
    <select id="selectList" resultType="TSysDept" parameterType="TSysDept">
        <include refid="SelectOneSql"/>
        <where>
             <!--state=0-->
            <if test="name != null  and name != ''"> and `name` like concat('%',#{name},'%')</if>
            <if test="state != null "> and `state`=#{state}</if>
            <if test="leader != null  and leader != ''"> and `leader` like concat('%',#{leader},'%')</if>
            <if test="phone != null  and phone != ''"> and `phone` like concat('%',#{phone},'%')</if>
            <if test="mail != null  and mail != ''"> and `mail` like concat('%',#{mail},'%')</if>
            ${params.dataScope}
        </where>
        order by pid desc,id
    </select>
    <insert id="insert" parameterType="TSysDept" keyProperty="id" useGeneratedKeys="true">
        insert into t_sys_dept(
        <trim suffixOverrides=",">
            <if test="id != null  and id != ''">`id`,</if>
            <if test="name != null  and name != ''">`name`,</if>
            <if test="pid != null ">`pid`,</if>
            <if test="pids != null  and pids != ''">`pids`,</if>
            <if test="state != null ">`state`,</if>
            <if test="leader != null  and leader != ''">`leader`,</if>
            <if test="phone != null  and phone != ''">`phone`,</if>
            <if test="mail != null  and mail != ''">`mail`,</if>
            <if test="createdTime != null ">`created_time`,</if>
            <if test="updatedTime != null ">`updated_time`,</if>
        </trim>
        )values(
        <trim suffixOverrides=",">
            <if test="id != null  and id != ''">#{id},</if>
            <if test="name != null  and name != ''">#{name},</if>
            <if test="pid != null ">#{pid},</if>
            <if test="pids != null  and pids != ''">#{pids},</if>
            <if test="state != null ">#{state},</if>
            <if test="leader != null  and leader != ''">#{leader},</if>
            <if test="phone != null  and phone != ''">#{phone},</if>
            <if test="mail != null  and mail != ''">#{mail},</if>
            <if test="createdTime != null ">#{createdTime},</if>
            <if test="updatedTime != null ">#{updatedTime},</if>
        </trim>
        )
    </insert>
    <select id="selectOneByProperty" resultType="TSysDept">
        <include refid="SelectOneSql"/>
        where ${param1} = #{param2}
    </select>
    <select id="selectListByProperty" resultType="TSysDept">
        <include refid="SelectOneSql"/>
        where ${param1} = #{param2}
    </select>

    <delete id="deleteById" parameterType="TSysDept">
        update t_sys_dept set state=1 where id=#{id}
        ${params.dataScope}
    </delete>
    <update id="update" parameterType="TSysDept">
        update t_sys_dept set
        <trim suffixOverrides=",">
            <if test="name != null  and name != ''">`name`=#{name},</if>
            <if test="pid != null ">`pid`=#{pid},</if>
            <if test="pids != null  and pids != ''">`pids`=#{pids},</if>
            <if test="state != null ">`state`=#{state},</if>
            <if test="leader != null  and leader != ''">`leader`=#{leader},</if>
            <if test="phone != null  and phone != ''">`phone`=#{phone},</if>
            <if test="mail != null  and mail != ''">`mail`=#{mail},</if>
            <if test="createdTime != null ">`created_time`=#{createdTime},</if>
            <if test="updatedTime != null ">`updated_time`=#{updatedTime},</if>
        </trim>
        where id=#{id}
        ${params.dataScope}
    </update>
    <select id="getDeptWithRoleStatus" resultType="TSysDept">
        select d.*,rp.role_id,p.id perm_id
        from t_sys_dept d
        left join t_sys_perm p on d.id=p.resource_id and p.perm_type='DEPT'
        left join t_sys_role_perm rp on p.id=rp.perm_id and rp.role_id=#{roleId}
        <where>
            <!--state=0-->
            ${params.dataScope}
        </where>
        order by d.pid desc,d.id
    </select>
    <select id="getChildrenDept" resultType="TSysDept" parameterType="TSysDept">
        select * from t_sys_dept
        <where>
            find_in_set(#{id},pids)
            ${params.dataScope}
        </where>
    </select>
    <update id="updateDeptListPids" parameterType="list">
        update t_sys_dept set pids =
        <foreach collection="list" item="item"
                 open="case id" close="end" separator=" ">
            when #{item.id} then #{item.pids}
        </foreach>
        where id in
        <foreach collection="list" item="item"
                 open="(" close=")" separator=",">
            #{item.id}
        </foreach>
    </update>
</mapper>